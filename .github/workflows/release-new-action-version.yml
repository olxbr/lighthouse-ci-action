name: Release new action version
on:
  release:
    types: [released]
  workflow_dispatch:
    inputs:
      TAG_NAME:
        description: 'Tag name that the major tag will point to'
        required: true

env:
  TAG_NAME: ${{ github.event.inputs.TAG_NAME || github.event.release.tag_name }}
permissions:
  contents: write

jobs:
  trigger:
    name: Runs integration tests
    runs-on: ubuntu-latest
    env: 
      WAIT_TIMEOUT: 300
      GITHUB_API_REPO: "https://api.github.com/repos/olxbr/action-tester"
      CURL_HEADERS: "-H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.PAT }}'"
      
    steps:
      - name: Test semantic versioning
        run: |
          egrep -q "^v[[:digit:]]*\.[[:digit:]]*\.[[:digit:]]*$" <<< ${{ env.TAG_NAME }} && echo "Semantic Version OK" || (echo "Check the semantic version"; exit 1)

      - name: Trigger repo olxbr/action-tester
        run: |
          curl -X POST ${GITHUB_API_REPO}/dispatches \
            -H 'Accept: application/vnd.github.everest-preview+json' \
            -H 'Authorization: token ${{ secrets.PAT }}' \
            --data '{"event_type": "lighthouse-push-major", "client_payload": { "version": "${GITHUB_REF#refs/heads/}"}}'
                      
      - name: Wait repo olxbr/action-tester finish
        run: |
          function hasTimedOut() {
              actionType=$1
              initTime=$2
          
              echo "INFO - Waiting action ${actionType} on olxbr/action-tester..."
              elipsedTime=$(($(date +'%Y%m%d%H%M%S')-${initTime}))
              
              echo "INFO - Time spent so far [${elipsedTime}]..."
              if ((${elipsedTime}>${WAIT_TIMEOUT})); then
                  echo "ERRO - Wait timeout reached [${WAIT_TIMEOUT} seconds] :("
                  exit 1
              fi
              
              echo "INFO - Sleeping for 3 seconds to check again..."
              sleep 3
          }
          
          initTime=$(date +"%Y%m%d%H%M%S")
          CURL_CMD_ACTIONS_STATUS="curl -s ${CURL_HEADERS} ${GITHUB_API_REPO}/actions/runs?per_page=5 | jq '.workflow_runs[] | .status' | egrep 'in_progress|queue'"
                    
          ## Has been started
          while ! status=$(eval ${CURL_CMD_ACTIONS_STATUS}); do
              echo "INFO - Payload status [${status}]"
              hasTimedOut START ${initTime}
          done
          echo "INFO - Jobs has been started :)"
          echo "INFO - ========================"
                    
          ## Has been finished
          while status=$(eval ${CURL_CMD_ACTIONS_STATUS}); do
              echo "INFO - Payload status [${status}]"
              hasTimedOut FINISH ${initTime}
          done
          echo "INFO - Jobs finished"
          
          CURL_CMD_ACTIONS_CONCLUSION=$(eval curl -s ${CURL_HEADERS} ${GITHUB_API_REPO}/actions/runs?per_page=1 | jq '.workflow_runs[] | .name,.conclusion,.status')
          echo "INFO - Status of last execution"
          echo "================================"
          echo ${CURL_CMD_ACTIONS_CONCLUSION}
          echo "================================"
          
          if [[ ${CURL_CMD_ACTIONS_CONCLUSION} =~ success ]]; then
              echo "INFO - Workflow finished successfully"
              echo "INFO - Proceed with tag (Major Released)"
          else
              echo "ERRO - Something went wrong on olxbr/action-test action."
              echo "ERRO - Major will NOT be tagged!"
              exit 1
          fi
          
          
  update_tag:
    name: Update the major tag to include the ${{ github.event.inputs.TAG_NAME || github.event.release.tag_name }} changes
    enviroment: production
    runs-on: ubuntu-latest
    needs: [trigger]
    steps:
      - name: Update the ${{ env.TAG_NAME }} tag
        id: update-major-tag
        uses: actions/publish-action@v0.1.0
        with:
          source-tag: ${{ env.TAG_NAME }}
      - name: Dora Metrics
        run: true

